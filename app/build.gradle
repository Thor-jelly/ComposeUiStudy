plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.ddongwu.composeuistudy'
    compileSdk 33

    defaultConfig {
        applicationId "com.ddongwu.composeuistudy"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    //需要注意的是，如果你使用的 Jetpack Compose 版本不是稳定版而是最新版的时候，
    //Compose Compiler 版本通常会和 ui, animation 等版本不一致，
    //你需要在应用的 gradle 文件单独设置最新的编译器版本，否则会发生编译错误.
    buildFeatures {
        compose true //在 Android BuildFeatures 代码块内将 compose 标志设置为 true 会启用 Compose 功能。
    }
    composeOptions {
        //ComposeOptions 代码块中定义的 Kotlin 编译器扩展版本控制与 Kotlin 版本控制相关联。
        //请务必参阅兼容性对应图，并选择与您项目的 Kotlin 版本匹配的库版本。
        //https://developer.android.com/jetpack/androidx/releases/compose-kotlin?hl=zh-cn
        kotlinCompilerExtensionVersion '1.4.3'
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //自 Jetpack Compose 1.3.0 起，Google 提供了 Compose BOM（Bill of Materials）用于快速指定版本。
    //BOM 是一个 Maven 模块，它声明一组库和版本的对应关系，
    //将能极大地简化你在 Gradle 依赖块中定义 Compose 库版本的方式。
    //您现在只需要定义一个 BOM 版本，就可以同时指定所有的 Compose 库版本，
    //而不是分别定义每个版本(当库版本开始不同时，这可能会变得很麻烦并且容易出错)。
    //每当 Compose 有一个新的稳定版本时，我们都将发布一个新的 BOM 版本，
    //因此从稳定版本迁移到新的稳定版本将会十分轻松
    //bom 与 版本对应 https://developer.android.com/jetpack/compose/bom/bom-mapping?hl=zh-cn
    def composeBom = platform('androidx.compose:compose-bom:2023.01.00')
    implementation composeBom
    androidTestImplementation composeBom

    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.ui:ui'
    //implementation 'androidx.compose.ui:ui-graphics'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.7.2'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'
    // Optional - Integration with RxJava
    implementation 'androidx.compose.runtime:runtime-rxjava3'
}